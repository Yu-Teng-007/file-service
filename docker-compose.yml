version: '3.8'

services:
  file-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: file-service
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - UPLOAD_DIR=/app/uploads
      - MAX_FILE_SIZE=104857600
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-here}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000}
      - RATE_LIMIT_TTL=60
      - RATE_LIMIT_LIMIT=100
    volumes:
      - file_uploads:/app/uploads
      - file_logs:/app/logs
      - file_data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - file-service-network

  # Nginx 反向代理 (可选)
  nginx:
    image: nginx:alpine
    container_name: file-service-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - file_uploads:/var/www/uploads:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - file-service
    restart: unless-stopped
    networks:
      - file-service-network

volumes:
  file_uploads:
    driver: local
  file_logs:
    driver: local
  file_data:
    driver: local

networks:
  file-service-network:
    driver: bridge
